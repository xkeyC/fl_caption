// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.11.1.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../candle_models/whisper/model.dart';
import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

Future<String> createCancellationToken() =>
    RustLib.instance.api.crateApiWhisperCreateCancellationToken();

Future<void> cancelCancellationToken({required String tokenId}) => RustLib
    .instance
    .api
    .crateApiWhisperCancelCancellationToken(tokenId: tokenId);

Stream<List<Segment>> launchCaption({
  required WhisperClient whisperClient,
  String? audioDevice,
  bool? audioDeviceIsInput,
  String? audioLanguage,
  required String cancelTokenId,
  bool? withTimestamps,
  bool? verbose,
  bool? tryWithCuda,
  int? whisperMaxAudioDuration,
  BigInt? inferenceInterval,
  BigInt? whisperDefaultMaxDecodeTokens,
  double? whisperTemperature,
  String? vadModelPath,
  double? vadFiltersValue,
}) => RustLib.instance.api.crateApiWhisperLaunchCaption(
  whisperClient: whisperClient,
  audioDevice: audioDevice,
  audioDeviceIsInput: audioDeviceIsInput,
  audioLanguage: audioLanguage,
  cancelTokenId: cancelTokenId,
  withTimestamps: withTimestamps,
  verbose: verbose,
  tryWithCuda: tryWithCuda,
  whisperMaxAudioDuration: whisperMaxAudioDuration,
  inferenceInterval: inferenceInterval,
  whisperDefaultMaxDecodeTokens: whisperDefaultMaxDecodeTokens,
  whisperTemperature: whisperTemperature,
  vadModelPath: vadModelPath,
  vadFiltersValue: vadFiltersValue,
);

class WhisperClient {
  final Map<String, String> models;
  final String config;
  final Uint8List tokenizer;
  final bool isMultilingual;
  final bool isQuantized;
  final String modelType;

  const WhisperClient({
    required this.models,
    required this.config,
    required this.tokenizer,
    required this.isMultilingual,
    required this.isQuantized,
    required this.modelType,
  });

  // HINT: Make it `#[frb(sync)]` to let it become the default constructor of Dart class.
  static Future<WhisperClient> newInstance({
    required Map<String, String> models,
    required String config,
    required List<int> tokenizer,
    required bool isMultilingual,
    required bool isQuantized,
    required String modelType,
  }) => RustLib.instance.api.crateApiWhisperWhisperClientNew(
    models: models,
    config: config,
    tokenizer: tokenizer,
    isMultilingual: isMultilingual,
    isQuantized: isQuantized,
    modelType: modelType,
  );

  @override
  int get hashCode =>
      models.hashCode ^
      config.hashCode ^
      tokenizer.hashCode ^
      isMultilingual.hashCode ^
      isQuantized.hashCode ^
      modelType.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is WhisperClient &&
          runtimeType == other.runtimeType &&
          models == other.models &&
          config == other.config &&
          tokenizer == other.tokenizer &&
          isMultilingual == other.isMultilingual &&
          isQuantized == other.isQuantized &&
          modelType == other.modelType;
}
